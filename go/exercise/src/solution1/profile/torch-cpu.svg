<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="309" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="309" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.slicebytetostring (5 samples, 1.27%)</title><rect x="1052.2" y="181" width="15.0" height="15.0" fill="rgb(234,198,48)" rx="2" ry="2" />
<text text-anchor="" x="1055.23" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>syscall.Read (325 samples, 82.49%)</title><rect x="69.9" y="85" width="973.3" height="15.0" fill="rgb(233,22,9)" rx="2" ry="2" />
<text text-anchor="" x="72.90" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >syscall.Read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).refill (2 samples, 0.51%)</title><rect x="1061.2" y="101" width="6.0" height="15.0" fill="rgb(228,134,51)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mcall (1 samples, 0.25%)</title><rect x="13.0" y="261" width="3.0" height="15.0" fill="rgb(216,216,8)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree.func1 (2 samples, 0.51%)</title><rect x="1061.2" y="117" width="6.0" height="15.0" fill="rgb(251,79,3)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.typedmemmove (2 samples, 0.51%)</title><rect x="1148.1" y="165" width="6.0" height="15.0" fill="rgb(211,81,21)" rx="2" ry="2" />
<text text-anchor="" x="1151.07" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semaphore_wait (1 samples, 0.25%)</title><rect x="13.0" y="117" width="3.0" height="15.0" fill="rgb(226,110,10)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>syscall.Syscall (325 samples, 82.49%)</title><rect x="69.9" y="53" width="973.3" height="15.0" fill="rgb(211,156,10)" rx="2" ry="2" />
<text text-anchor="" x="72.90" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >syscall.Syscall</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.memclrNoHeapPointers (1 samples, 0.25%)</title><rect x="1061.2" y="37" width="3.0" height="15.0" fill="rgb(240,127,38)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>testing.tRunner (392 samples, 99.49%)</title><rect x="16.0" y="261" width="1174.0" height="15.0" fill="rgb(233,217,23)" rx="2" ry="2" />
<text text-anchor="" x="18.99" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >testing.tRunner</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree.func1 (3 samples, 0.76%)</title><rect x="1043.2" y="117" width="9.0" height="15.0" fill="rgb(238,22,47)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.findrunnable (1 samples, 0.25%)</title><rect x="13.0" y="213" width="3.0" height="15.0" fill="rgb(226,47,2)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (3 samples, 0.76%)</title><rect x="1043.2" y="133" width="9.0" height="15.0" fill="rgb(207,226,13)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.notesleep (1 samples, 0.25%)</title><rect x="13.0" y="181" width="3.0" height="15.0" fill="rgb(228,150,1)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcBgMarkWorker (1 samples, 0.25%)</title><rect x="10.0" y="261" width="3.0" height="15.0" fill="rgb(240,125,32)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.makeslice (3 samples, 0.76%)</title><rect x="1043.2" y="181" width="9.0" height="15.0" fill="rgb(230,3,27)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (1 samples, 0.25%)</title><rect x="10.0" y="213" width="3.0" height="15.0" fill="rgb(211,219,12)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapassign_fast64 (25 samples, 6.35%)</title><rect x="1079.2" y="213" width="74.9" height="15.0" fill="rgb(254,113,22)" rx="2" ry="2" />
<text text-anchor="" x="1082.19" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runtime...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semawakeup (1 samples, 0.25%)</title><rect x="10.0" y="133" width="3.0" height="15.0" fill="rgb(224,71,15)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcMarkTermination (1 samples, 0.25%)</title><rect x="10.0" y="229" width="3.0" height="15.0" fill="rgb(211,141,5)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semrelease (1 samples, 0.25%)</title><rect x="10.0" y="117" width="3.0" height="15.0" fill="rgb(215,83,14)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*hmap).newoverflow (1 samples, 0.25%)</title><rect x="1145.1" y="165" width="3.0" height="15.0" fill="rgb(215,30,23)" rx="2" ry="2" />
<text text-anchor="" x="1148.08" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.park_m (1 samples, 0.25%)</title><rect x="13.0" y="245" width="3.0" height="15.0" fill="rgb(213,17,48)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).refill (3 samples, 0.76%)</title><rect x="1043.2" y="101" width="9.0" height="15.0" fill="rgb(223,114,8)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.51%)</title><rect x="1061.2" y="85" width="6.0" height="15.0" fill="rgb(233,95,22)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcMarkTermination.func1 (1 samples, 0.25%)</title><rect x="10.0" y="197" width="3.0" height="15.0" fill="rgb(236,76,22)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/csv.(*Reader).readRecord (349 samples, 88.58%)</title><rect x="22.0" y="197" width="1045.2" height="15.0" fill="rgb(206,92,32)" rx="2" ry="2" />
<text text-anchor="" x="24.98" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/csv.(*Reader).readRecord</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.growWork_fast64 (17 samples, 4.31%)</title><rect x="1103.1" y="197" width="51.0" height="15.0" fill="rgb(215,190,27)" rx="2" ry="2" />
<text text-anchor="" x="1106.15" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.25%)</title><rect x="1064.2" y="69" width="3.0" height="15.0" fill="rgb(219,62,48)" rx="2" ry="2" />
<text text-anchor="" x="1067.21" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree (3 samples, 0.76%)</title><rect x="1043.2" y="149" width="9.0" height="15.0" fill="rgb(246,147,48)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pingcapExercise/src/solution1.TestTestSolution1 (392 samples, 99.49%)</title><rect x="16.0" y="245" width="1174.0" height="15.0" fill="rgb(224,61,16)" rx="2" ry="2" />
<text text-anchor="" x="18.99" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >pingcapExercise/src/solution1.TestTestSolution1</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcMark (1 samples, 0.25%)</title><rect x="10.0" y="181" width="3.0" height="15.0" fill="rgb(214,25,9)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep.func1 (1 samples, 0.25%)</title><rect x="13.0" y="149" width="3.0" height="15.0" fill="rgb(248,224,7)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os.(*File).Read (327 samples, 82.99%)</title><rect x="63.9" y="133" width="979.3" height="15.0" fill="rgb(240,95,29)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >os.(*File).Read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>os.(*File).read (327 samples, 82.99%)</title><rect x="63.9" y="117" width="979.3" height="15.0" fill="rgb(214,0,25)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >os.(*File).read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/csv.(*Reader).readLine (327 samples, 82.99%)</title><rect x="63.9" y="181" width="979.3" height="15.0" fill="rgb(219,127,31)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/csv.(*Reader).readLine</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.gcMarkDone (1 samples, 0.25%)</title><rect x="10.0" y="245" width="3.0" height="15.0" fill="rgb(227,173,35)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcache).nextFree (2 samples, 0.51%)</title><rect x="1061.2" y="149" width="6.0" height="15.0" fill="rgb(226,161,36)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep1 (1 samples, 0.25%)</title><rect x="13.0" y="133" width="3.0" height="15.0" fill="rgb(234,99,38)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (394 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(217,185,19)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="287.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcentral).cacheSpan (3 samples, 0.76%)</title><rect x="1043.2" y="85" width="9.0" height="15.0" fill="rgb(244,161,48)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bufio.(*Reader).ReadSlice (327 samples, 82.99%)</title><rect x="63.9" y="165" width="979.3" height="15.0" fill="rgb(213,51,7)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >bufio.(*Reader).ReadSlice</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.semasleep (1 samples, 0.25%)</title><rect x="13.0" y="165" width="3.0" height="15.0" fill="rgb(253,15,40)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapaccess2_fast64 (10 samples, 2.54%)</title><rect x="1154.1" y="229" width="29.9" height="15.0" fill="rgb(212,94,15)" rx="2" ry="2" />
<text text-anchor="" x="1157.06" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ru..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.systemstack (2 samples, 0.51%)</title><rect x="1061.2" y="133" width="6.0" height="15.0" fill="rgb(238,129,47)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mcentral).grow (1 samples, 0.25%)</title><rect x="1061.2" y="69" width="3.0" height="15.0" fill="rgb(242,75,41)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pingcapExercise/src/solution1.FileToDictBuffIo (380 samples, 96.45%)</title><rect x="16.0" y="229" width="1138.1" height="15.0" fill="rgb(246,9,30)" rx="2" ry="2" />
<text text-anchor="" x="18.99" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >pingcapExercise/src/solution1.FileToDictBuffIo</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.freedefer (2 samples, 0.51%)</title><rect x="63.9" y="69" width="6.0" height="15.0" fill="rgb(210,151,51)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (5 samples, 1.27%)</title><rect x="1052.2" y="165" width="15.0" height="15.0" fill="rgb(218,181,35)" rx="2" ry="2" />
<text text-anchor="" x="1055.23" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapiternext (2 samples, 0.51%)</title><rect x="1184.0" y="229" width="6.0" height="15.0" fill="rgb(214,102,17)" rx="2" ry="2" />
<text text-anchor="" x="1187.01" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*mspan).refillAllocCache (3 samples, 0.76%)</title><rect x="1043.2" y="69" width="9.0" height="15.0" fill="rgb(243,130,28)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.heapBits.initSpan (1 samples, 0.25%)</title><rect x="1061.2" y="53" width="3.0" height="15.0" fill="rgb(231,200,53)" rx="2" ry="2" />
<text text-anchor="" x="1064.22" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mallocgc (3 samples, 0.76%)</title><rect x="1043.2" y="165" width="9.0" height="15.0" fill="rgb(252,213,21)" rx="2" ry="2" />
<text text-anchor="" x="1046.25" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.stopm (1 samples, 0.25%)</title><rect x="13.0" y="197" width="3.0" height="15.0" fill="rgb(249,92,45)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.schedule (1 samples, 0.25%)</title><rect x="13.0" y="229" width="3.0" height="15.0" fill="rgb(232,89,18)" rx="2" ry="2" />
<text text-anchor="" x="15.99" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.evacuate_fast64 (17 samples, 4.31%)</title><rect x="1103.1" y="181" width="51.0" height="15.0" fill="rgb(211,213,46)" rx="2" ry="2" />
<text text-anchor="" x="1106.15" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >runti..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mapaccess1_fast64 (4 samples, 1.02%)</title><rect x="1067.2" y="213" width="12.0" height="15.0" fill="rgb(249,210,0)" rx="2" ry="2" />
<text text-anchor="" x="1070.21" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>bufio.(*Reader).fill (327 samples, 82.99%)</title><rect x="63.9" y="149" width="979.3" height="15.0" fill="rgb(210,213,18)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >bufio.(*Reader).fill</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.deferreturn (2 samples, 0.51%)</title><rect x="63.9" y="85" width="6.0" height="15.0" fill="rgb(236,12,32)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.notewakeup (1 samples, 0.25%)</title><rect x="10.0" y="149" width="3.0" height="15.0" fill="rgb(227,170,29)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>syscall.read (325 samples, 82.49%)</title><rect x="69.9" y="69" width="973.3" height="15.0" fill="rgb(227,37,35)" rx="2" ry="2" />
<text text-anchor="" x="72.90" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >syscall.read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>internal/poll.(*FD).Read (327 samples, 82.99%)</title><rect x="63.9" y="101" width="979.3" height="15.0" fill="rgb(230,62,7)" rx="2" ry="2" />
<text text-anchor="" x="66.91" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >internal/poll.(*FD).Read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.memmove (2 samples, 0.51%)</title><rect x="1148.1" y="149" width="6.0" height="15.0" fill="rgb(227,134,44)" rx="2" ry="2" />
<text text-anchor="" x="1151.07" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>encoding/csv.(*Reader).Read (350 samples, 88.83%)</title><rect x="19.0" y="213" width="1048.2" height="15.0" fill="rgb(241,217,31)" rx="2" ry="2" />
<text text-anchor="" x="21.98" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >encoding/csv.(*Reader).Read</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.(*hmap).newoverflow (8 samples, 2.03%)</title><rect x="1079.2" y="197" width="23.9" height="15.0" fill="rgb(249,90,45)" rx="2" ry="2" />
<text text-anchor="" x="1082.19" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >r..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.mach_semaphore_signal (1 samples, 0.25%)</title><rect x="10.0" y="101" width="3.0" height="15.0" fill="rgb(208,160,43)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>runtime.helpgc (1 samples, 0.25%)</title><rect x="10.0" y="165" width="3.0" height="15.0" fill="rgb(241,213,24)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
